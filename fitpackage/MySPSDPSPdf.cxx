/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "MySPSDPSPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

#include "SPSDPSCalcFcn.h"

ClassImp(MySPSDPSPdf); 

 MySPSDPSPdf::MySPSDPSPdf(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _a,
                        RooAbsReal& _b,
                        RooAbsReal& _p2,
                        RooAbsReal& _p1,
                        RooAbsReal& _p0) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   a("a","a",this,_a),
   b("b","b",this,_b),
   p2("p2","p2",this,_p2),
   p1("p1","p1",this,_p1),
   p0("p0","p0",this,_p0)
 { 
 } 


 MySPSDPSPdf::MySPSDPSPdf(const MySPSDPSPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   a("a",this,other.a),
   b("b",this,other.b),
   p2("p2",this,other.p2),
   p1("p1",this,other.p1),
   p0("p0",this,other.p0)
 { 
 } 



 Double_t MySPSDPSPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   double res = SqrtExponentPoly(x, a, b, p2, p1, p0);
   return res ; 
 } 



