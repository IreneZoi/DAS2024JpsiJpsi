/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MIPTDOUBLEGAUSSIAN
#define MIPTDOUBLEGAUSSIAN

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class MiptDoubleGaussian : public RooAbsPdf {
public:
  MiptDoubleGaussian() {} ; 
  MiptDoubleGaussian(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _mean,
	      RooAbsReal& _frac2,
	      RooAbsReal& _shift,
	      RooAbsReal& _mth,
	      RooAbsReal& _w1,
	      RooAbsReal& _w2,
	      RooAbsReal& _beta);
  MiptDoubleGaussian(const MiptDoubleGaussian& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new MiptDoubleGaussian(*this,newname); }
  inline virtual ~MiptDoubleGaussian() { }

protected:

  RooRealProxy x ;
  RooRealProxy mean ;
  RooRealProxy frac2 ;
  RooRealProxy shift ;
  RooRealProxy mth ;
  RooRealProxy w1 ;
  RooRealProxy w2 ;
  RooRealProxy beta ;
  
  Double_t evaluate() const ;

private:

  ClassDef(MiptDoubleGaussian,1) // Your description goes here...
};
 
#endif
